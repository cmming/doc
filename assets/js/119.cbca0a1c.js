(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{445:function(t,e,r){"use strict";r.r(e);var a=r(18),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),e("p",[t._v("Spring Security 是一个功能强大且高度可定制的"),e("strong",[t._v("身份验证")]),t._v("和"),e("strong",[t._v("访问控制")]),t._v("框架。它是保护基于 Spring 的应用程序的事实标准。(就是用来登录和角色权限控制的)")]),t._v(" "),e("h3",{attrs:{id:"_1-身份验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-身份验证"}},[t._v("#")]),t._v(" 1. 身份验证")]),t._v(" "),e("p",[t._v("验证用户的常用方法是要求用户输入用户名和密码。")]),t._v(" "),e("h4",{attrs:{id:"_1-1-passwordencoder-密码编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-passwordencoder-密码编译器"}},[t._v("#")]),t._v(" 1.1 PasswordEncoder (密码编译器)")]),t._v(" "),e("p",[t._v("用于密码的"),e("strong",[t._v("单向")]),t._v("加密，保证密码的安全存储。")]),t._v(" "),e("h4",{attrs:{id:"_1-2-delegatingpasswordencoder-委托类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-delegatingpasswordencoder-委托类"}},[t._v("#")]),t._v(" 1.2 DelegatingPasswordEncoder（委托类）")]),t._v(" "),e("p",[t._v("为了避免使用莫一种特定算法的编码器所带来后期升级db的麻烦，可以使用委托类，它可以根据不同的算法来选择不同的编码器。")]),t._v(" "),e("ol",[e("li",[t._v("确保使用当前密码存储建议对密码进行编码")]),t._v(" "),e("li",[t._v("能同时验证新旧密码")]),t._v(" "),e("li",[t._v("自动升级密码的编码器 （重写了upgradeEncoding，如果历史的加密模式和新的不等，修改成true。DaoAuthenticationProvider中createSuccessAuthentication根据upgradeEncoding自动更新密码的加加密编码）")])]),t._v(" "),e("p",[t._v("存储格式为")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{编码器id}加密后的密码\n")])])]),e("h4",{attrs:{id:"_1-3-authorizationserverconfigureradapter-认证服务器配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-authorizationserverconfigureradapter-认证服务器配置"}},[t._v("#")]),t._v(" 1.3 AuthorizationServerConfigurerAdapter (认证服务器配置)")]),t._v(" "),e("ol",[e("li",[t._v("配置token的服务 DefaultTokenServices")]),t._v(" "),e("li",[t._v("配置授权服务器端点的属性和增强功能  AuthorizationServerEndpointsConfigurer")]),t._v(" "),e("li",[t._v("配置oauth2客户端的信息 ClientDetailsServiceConfigurer，实现ClientDetailsService接口")])]),t._v(" "),e("h4",{attrs:{id:"_1-4-websecurityconfigureradapter-web安全配置器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-websecurityconfigureradapter-web安全配置器"}},[t._v("#")]),t._v(" 1.4 WebSecurityConfigurerAdapter (Web安全配置器)")]),t._v(" "),e("p",[t._v("用于配置基于session方式的接口和页面安全。（如果系统是通过session控制登录权限）")]),t._v(" "),e("h3",{attrs:{id:"_2-oauth2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-oauth2"}},[t._v("#")]),t._v(" 2. oauth2")]),t._v(" "),e("h4",{attrs:{id:"_2-1-authorizationserverconfiguration-授权服务器配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-authorizationserverconfiguration-授权服务器配置"}},[t._v("#")]),t._v(" 2.1 AuthorizationServerConfiguration（授权服务器配置）")]),t._v(" "),e("p",[t._v("通过实现AuthorizationServerConfiguration接口来实现自定义的授权服务器配置。该配置用于接口权限控制。")]),t._v(" "),e("h3",{attrs:{id:"_3-自定义授权模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-自定义授权模式"}},[t._v("#")]),t._v(" 3. 自定义授权模式")]),t._v(" "),e("p",[t._v("自定义授权的时候的参数，方便添加验证码、短信、微信整合等操作。")]),t._v(" "),e("h3",{attrs:{id:"_4-多用户体系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-多用户体系"}},[t._v("#")]),t._v(" 4. 多用户体系")]),t._v(" "),e("p",[t._v("http://"),e("auth-server-host",[t._v(":"),e("auth-server-port",[t._v("/oauth/authorize?response_type=code&client_id="),e("client-id",[t._v("&redirect_uri="),e("redirect-uri",[t._v("&scope="),e("scope")],1)],1)],1)],1)],1),t._v(" "),e("p",[t._v("http://localhost:9090/oauth/authorize?response_type=code&client_id=admin&redirect_uri=https://www.baidu.com/&scope=all")]),t._v(" "),e("p",[t._v("http://localhost:9090/oauth/authorize?response_type=token&client_id=admin&client_secret=123123")]),t._v(" "),e("p",[t._v("/oauth/authorize?response_type=code&client_id=admin")])])}),[],!1,null,null,null);e.default=s.exports}}]);